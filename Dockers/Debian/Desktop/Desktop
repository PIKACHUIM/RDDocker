# Images ------------------------------------------------------
# syntax=docker/dockerfile:1.3-labs
ARG OS_VERSION=latest
ARG OS_SYSTEMS=debian
FROM pikachuim/${OS_SYSTEMS}:${OS_VERSION}-server
# ARGS --------------------------------------------------------------------------------------------
ARG OS_MESSAGE="Pikachu Docker X11GUI"
ARG OS_VERSION=latest

# Message -----------------------------------------------------------------------------------------
MAINTAINER Pikachu Ren <pikachuim@qq.com>
LABEL System=${OS_SYSTEMS}
LABEL Version=${OS_VERSION}
LABEL Description=${OS_MESSAGE}
RUN echo "#!/bin/sh\nexit 0" > /usr/sbin/policy-rc.d
# Install Xserver ---------------------------------------------
RUN apt-get update && DEBIAN_FRONTEND=noninteractive          \
    apt install -y xserver-xorg-core xauth                    \
                   xserver-xorg-video-dummy curl net-tools    \   
                   xfonts-base xfonts-75dpi xfonts-100dpi     \
                   xfonts-scalable dbus-user-session          \
                   dbus-x11 xinit neofetch                                  
COPY Config/x11server/xorg.conf /usr/share/X11/xorg.conf.d/
COPY Config/x11server/create-pulse-clientconf.sh /etc/profile.d/
# COPY Config/x11server/70-ubuntu.conf                          \
#      /etc/lightdm/lightdm.conf.d/
# RUN echo 'load-module module-native-protocol-unix '           \
#     >> /etc/pulse/default.pa                                  \
# &&  echo 'auth-anonymous=1 socket=/tmp/pulse-socket'          \
#     >> /etc/pulse/default.pa

# Install OpenVGL----------------------------------------------
COPY AppImg/virtualgl_amd64.deb /
RUN apt update && DEBIAN_FRONTEND=noninteractive              \
    apt install -y libvdpau1 mesa-vdpau-drivers libegl1-mesa  \
                   libglu1-mesa libxv1 libxtst6
RUN dpkg -i virtualgl_amd64.deb && rm virtualgl_amd64.deb                                    
RUN echo 'XAUTHORITY=$HOME/.Xauthority.docker' >              \
         /etc/profile.d/Xauthority-fix.sh                     \
&&  ENV_1='export LD_PRELOAD=/usr/lib/libdlfaker.so:'         \
&&  ENV_2='/usr/lib/libvglfaker.so:$LD_PRELOAD'               \
&&  echo '${ENV_1}${ENV_2}' > /etc/profile.d/virtualgl.sh     \
&&  sed -i 's/use-ssh-agent/no-use-ssh-agent/'                \
        /etc/X11/Xsession.options
        
# Install Nomachine -------------------------------------------
COPY AppImg/nomachine_amd64.deb /
RUN dpkg -i /nomachine_amd64.deb && rm /nomachine_amd64.deb   \
&&  sed -i '$a PhysicalDesktopAuthorization 0'                \
    /usr/NX/etc/node.cfg                                      \
&&  sed -i '$a WaylandModes "egl,compositor,drm"'             \
    /usr/NX/etc/node.cfg

# Start UP -----------------------------------------------------------
RUN echo '#!/bin/bash' > /run.sh                                     \
&&  echo 'echo Starting Basic Server -------------------' >> /run.sh \
&&  echo 'nohup /usr/sbin/sshd -D &' >> /run.sh                      \
&&  echo 'export DISPLAY=:0' >> /run.sh                              \
&&  echo '/etc/init.d/dbus start' >> /run.sh                         \
&&  echo 'echo Starting NX -----------------------------' >> /run.sh \
&&  echo '/etc/NX/nxserver --startup' >> /run.sh                     \
&&  echo '/etc/NX/nxserver --restart ' >> /run.sh                    

# Port Mapping -------------------------------------------------------
EXPOSE 4000/tcp
CMD ["/sbin/init"]